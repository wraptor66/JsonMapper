{
  "event": {
    "name": "insertmember", //the name of the eventmap
    "type": "insert",
    "customers": [ //customers represent the current users of this event map
      "primerica",
      "legalshield"
    ],
    "responseobject": "actionresult", //the jsonobject that will be returned hydrated. It is a jsonstructuure within the collection below.
    "services": [
      {
        "servicename": "member", //name for referencing within the jsoncollection
        "serviceroute": "insertmember", //the route is the equivalent of method call
        "parentobject": "member", //json string for arguments (must be serialized)
        "serviceargs": "databasetables.Member", //json object for deserializing to crud requirements
        "servicetype": "POST" //since the calls to crud will be methods this may be deprecated
      }
    ]
  },
  "jsonstructures": {
    "member": {
      "uuid": null,
      "client_uuid": null,
      "prefix": null,
      "first_name": null,
      "middle_name": null,
      "last_name": null,
      "suffix": null,
      "date_of_birth": null,
      "ssn": null,
      "nin": null,
      "user_info": null
    },
    "actionresult": null   
  },
  "databasetables": {
    //the jstructures for each of the tables
    "Member": {
      "MemberID": null,
      "Attributes": null,
      "InsertUser": null,
      "InsertDate": null,
      "EditUser": null,
      "EditDate": null,
      "VoidUser": null,
      "VoidDate": null
    }
  },
  "definitions": {
    "primerica": {
      "member": {
        "id": {
          "datapayload": "sample_client",
          "parentobject": "client",
          "filterexpression": "id",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "uuid": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes",
          "filterexpression": "uuid",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "primaryaddresscity": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].city",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "phonenumber": {
          "datapayload": "JObject",
          "parentobject": "phone_number",
          "filterexpression": "",
          "required": true,
          "deleteifnull": false,
          "tag": "object"
        },
        "currenttime": {
          "datapayload": "EObject",
          "parentobject": "",
          "filterexpression": "GetDateTime",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "jsonobject": {
          "datapayload": "EObject",
          "parentobject": "",
          "filterexpression": "GetJsonObject",
          "required": true,
          "deleteifnull": false,
          "tag": "fromrebecca"
        },
        "contacts": {
          "datapayload": "JArray", //reflects a population multiple objects
          "parentobject": "client.attributes.contacts", //location of the array
          "filterexpression": "", //use this for querying from within the array
          "required": true,
          "deleteifnull": false,
          "tag": "{\"datapayload\":\"sample_client\", \"jstructure\" : \"contact\"}" //datapayload name & location of the object structure
        }
      }
    },
    "legalshield": {
      "member": {
        "uuid": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "id",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "client_uuid": {
          "datapayload": "eventpayload",
          "parentobject": "caller",
          "filterexpression": "client_id",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "prefix": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "prefix",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "first_name": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "first_name",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "middle_name": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "middle_name",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "last_name": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "last_name",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "suffix": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "suffix",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "date_of_birth": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "date_of_birth",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "ssn": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "ssn",
          "required": false,
          "deleteifnull": false,
          "tag": ""
        },
        "nin": {
          "datapayload": "eventpayload",
          "parentobject": "message.data",
          "filterexpression": "nin",
          "required": false,
          "deleteifnull": false,
          "tag": ""
        },
        "user_info": {
          "datapayload": "eventpayload",
          "parentobject": "caller",
          "filterexpression": "user_id",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        }
      }
    }
  }
}