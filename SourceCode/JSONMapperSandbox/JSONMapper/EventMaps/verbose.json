{
  "event": {
    "name": "insertmember", //the name of the eventmap
    "type": "insert",
    "customers": [ //customers represent the current users of this event map
      "primerica",
      "legalshield"
    ],
    "responseobject": "actionresult", //the jsonobject that will be returned hydrated. It is a jsonstructuure within the collection below.
    "services": [
      {
        "servicename": "member", //name for referencing within the jsoncollection
        "serviceroute": "insertmember", //the route is the equivalent of method call
        "parentobject": "member", //json string for arguments (must be serialized)
        "serviceargs": "databasetables.Member", //json object for deserializing to crud requirements
        "servicetype": "POST" //since the calls to crud will be methods this may be deprecated
      },
      {
        "servicename": "user", //name for referencing within the jsoncollection
        "serviceroute": "insertuser", //the route is the equivalent of method call
        "parentobject": "user", //json string for arguments (must be serialized)
        "serviceargs": "databasetables.User", //json object for deserializing to crud requirements
        "servicetype": "POST" //since the calls to crud will be methods this may be deprecated
      },
      {
        "servicename": "membersubscription", //name for referencing within the jsoncollection
        "serviceroute": "insertmembersubscription", //the route is the equivalent of method call
        "parentobject": "membersubscription", //json string for arguments (must be serialized)
        "serviceargs": "databasetables.MemberSubscription", //json object for deserializing to crud requirements
        "servicetype": "POST" //since the calls to crud will be methods this may be deprecated
      },
      {
        "servicename": "useraccount", //name for referencing within the jsoncollection
        "serviceroute": "insertuseraccount", //the route is the equivalent of method call
        "parentobject": "useraccount", //json string for arguments (must be serialized)
        "serviceargs": "databasetables.UserAccount", //json object for deserializing to crud requirements 
        "servicetype": "POST" //since the calls to crud will be methods this may be deprecated
      }
    ]
  },
  "jsonstructures": {
    "member": {
      "id": null,
      "uuid": null,
      "primaryaddresscity": null,
      "phonenumber": null,
      "currenttime": null,
      "jsonobject": null,
      "contacts": null
    },
    "primaryaddress": {
      "address1": null,
      "address2": null,
      "city": null,
      "state_province": null,
      "country": null,
      "postal_code": null
    },
    "phone_number": {
      "number": null,
      "extension": null,
      "address": null
    },
    "contact": {
      "name": null,
      "title": null,
      "phone": null,
      "email": null,
      "sample_contact": null
    },
    "package": {
      "uuid": null,
      "type": null,
      "package_template": null,
      "name": null,
      "service_term_months": null,
      "services": []
    },
    "service": {
      "uuid": null,
      "type": null,
      "name": null
    },
    "membersubscription": {
      "uuid": null,
      "client_uuid": null,
      "subscriber_number": null,
      "membership_type": null,
      "subscription_type": null,
      "active": null,
      "last_search_date": null,
      "family_members": null, //family_members JObject
      "monitored_data": null //monitored_data JObject
    },
    "family_members": {
      "primary": null,
      "spouse": null,
      "children": null
    },
    "monitored_data": {
      "name": null,
      "date_of_birth": null,
      "ssn": null,
      "nin": null,
      "drivers_license_numbers": null, //drivers_license_numbers JArray
      "addresses": null, //addresses as JArray
      "bank_accounts": null, //bank_accounts as JArray
      "cards": null, //bank_accounts as JArray
      "email_addresses": null, //email_addresses as JArray
      "passports": null, //email_addresses as JArray
      "phone_numbers": null //not sure about the phone numbers
    },
    "passports": {
      "uuid": null,
      "number": null
    },
    "email_addresses": {
      "uuid": null,
      "type": null,
      "email": null
    },
    "cards": {
      "uuid": null,
      "type": null,
      "card_number": null
    },
    "bank_accounts": {
      "uuid": null,
      "account_number": null
    },
    "drivers_license_numbers": {
      "uuid": null,
      "number": null
    },
    "addresses": {
      "uuid": null,
      "type": null,
      "address1": null,
      "city": null,
      "state_province": null,
      "country": null,
      "postal_code": null
    },
    "actionresult": null   
  },
  "databasetables": {
    //the jstructures for each of the tables
    "Member": {
      "MemberID": null,
      "Attributes": null,
      "InsertUser": null,
      "InsertDate": null,
      "EditUser": null,
      "EditDate": null,
      "VoidUser": null,
      "VoidDate": null
    },
    "MemberSubscription": {
      "MemberSubscriptionID": null, 
      "MemberID": null,
      "SubscriptionID": null, 
      "ClientID": null,
      "Attributes": null,
      "InsertUser": null,
      "InsertDate": null,
      "EditUser": null,
      "EditDate": null,
      "VoidUser": null,
      "VoidDate": null
    },
    "User": {
      "UserID": null,
      "Attributes": null,
      "InsertUser": null,
      "InsertDate": null,
      "EditUser": null,
      "EditDate": null,
      "VoidUser": null,
      "VoidDate": null
    },
    "UserAccount": {
      "UserAccountID": null,
      "MemberID": null,
      "Attributes": null,
      "InsertUser": null,
      "InsertDate": null,
      "EditUser": null,
      "EditDate": null,
      "VoidUser": null,
      "VoidDate": null
    }
  },
  "definitions": {
    "primerica": {
      "member": {
        "id": {
          "datapayload": "sample_client",
          "parentobject": "client",
          "filterexpression": "id",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "uuid": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes",
          "filterexpression": "uuid",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "primaryaddresscity": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].city",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "phonenumber": {
          "datapayload": "JObject",
          "parentobject": "phone_number",
          "filterexpression": "",
          "required": true,
          "deleteifnull": false,
          "tag": "object"
        },
        "currenttime": {
          "datapayload": "EObject",
          "parentobject": "",
          "filterexpression": "GetDateTime",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "jsonobject": {
          "datapayload": "EObject",
          "parentobject": "",
          "filterexpression": "GetJsonObject",
          "required": true,
          "deleteifnull": false,
          "tag": "fromrebecca"
        },
        "contacts": {
          "datapayload": "JArray", //reflects a population multiple objects
          "parentobject": "client.attributes.contacts", //location of the array
          "filterexpression": "", //use this for querying from within the array
          "required": true,
          "deleteifnull": false,
          "tag": "{\"datapayload\":\"sample_client\", \"jstructure\" : \"contact\"}" //datapayload name & location of the object structure
        }
      },
      "phone_number": {
        "number": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.phone_numbers",
          "filterexpression": "[?(@.type == 'Primary')].number",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "extension": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.phone_numbers",
          "filterexpression": "[?(@.type == 'Primary')].extension",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "address": {
          "datapayload": "JObject",
          "parentobject": "primaryaddress",
          "filterexpression": "",
          "required": true,
          "deleteifnull": true,
          "tag": "object"
        }
      },
      "primaryaddress": {
        "address1": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].address1",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "address2": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].address2",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "city": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].city",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "state_province": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].state_province",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "country": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].country",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "postal_code": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].postal_code",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        }
      },
      "contact": {
        "name": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "name",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "title": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "title",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "phone": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "phone_number",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "email": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "email_address",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "sample_contact": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "sample_contact",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        }
      }
    },
    "legalshield": {
      "member": {
        "id": {
          "datapayload": "sample_client",
          "parentobject": "client",
          "filterexpression": "id",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "uuid": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes",
          "filterexpression": "uuid",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "primaryaddresscity": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].city",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "phonenumber": {
          "datapayload": "JObject",
          "parentobject": "phone_number",
          "filterexpression": "",
          "required": true,
          "deleteifnull": false,
          "tag": "object"
        },
        "currenttime": {
          "datapayload": "EObject",
          "parentobject": "",
          "filterexpression": "GetDateTime",
          "required": true,
          "deleteifnull": false,
          "tag": ""
        },
        "jsonobject": {
          "datapayload": "EObject",
          "parentobject": "",
          "filterexpression": "GetJsonObject",
          "required": true,
          "deleteifnull": false,
          "tag": "fromrebecca"
        },
        "contacts": {
          "datapayload": "JArray", //reflects a population multiple objects
          "parentobject": "client.attributes.contacts", //location of the array
          "filterexpression": "", //use this for querying from within the array
          "required": true,
          "deleteifnull": false,
          "tag": "{\"datapayload\":\"sample_client\", \"jstructure\" : \"contact\"}" //datapayload name & location of the object structure
        }
      },
      "phone_number": {
        "number": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.phone_numbers",
          "filterexpression": "[?(@.type == 'Primary')].number",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "extension": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.phone_numbers",
          "filterexpression": "[?(@.type == 'Primary')].extension",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "address": {
          "datapayload": "JObject",
          "parentobject": "primaryaddress",
          "filterexpression": "",
          "required": true,
          "deleteifnull": true,
          "tag": "object"
        }
      },
      "primaryaddress": {
        "address1": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].address1",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "address2": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].address2",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "city": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].city",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "state_province": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].state_province",
          "required": false,
          "deleteifnull": true,
          "tag": ""
        },
        "country": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].country",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "postal_code": {
          "datapayload": "sample_client",
          "parentobject": "client.attributes.addresses",
          "filterexpression": "[?(@.type == 'Primary')].postal_code",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        }
      },
      "contact": {
        "name": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "name",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "title": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "title",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "phone": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "phone_number",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "email": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "email_address",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        },
        "sample_contact": {
          "datapayload": "internal",
          "parentobject": "",
          "filterexpression": "sample_contact",
          "required": true,
          "deleteifnull": true,
          "tag": ""
        }
      }
    }
  }
}